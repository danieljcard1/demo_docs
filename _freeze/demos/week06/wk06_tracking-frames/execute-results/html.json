{
  "hash": "c1665996d6eb8e8caf47c8409a28085f",
  "result": {
    "markdown": "---\ntitle: \"Wk 06: Tracking ngrams in TC Research\"\n---\n\n\n## Overview\n\nThis week we explore the techniques used in Majdik (2019) and Graham (2021) to track ngrams in our dataset of TC articles. The techniques that follow are similar to the exploratory work that both authors advocate. That is, you might build on this work as you develop a more nuanced approach to your data. \n\nWhile we could use Quanteda or a number of other approaches, we'll draw on Chapter 4 of [Text Mining with R: A Tidy Approach](https://www.tidytextmining.com/ngrams). \n\n## Preparation\n\nLoad libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n#install.packages(\"tidytext\")\nlibrary(tidytext)\n```\n:::\n\n\nLoad data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data <- read_csv(\"data/tc_journals.csv\")\n\nglimpse(raw_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,002\nColumns: 6\n$ source_title      <chr> \"JOURNAL OF BUSINESS AND TECHNICAL COMMUNICATION\", \"…\n$ author_full_names <chr> \"Wickman, Chad\", \"DeJeu, Emily Barrow\", \"DeVasto, Da…\n$ article_title     <chr> \"Genre and Metagenre in Biomedical Research Writing\"…\n$ abstract          <chr> \"The use of reporting guidelines is an established y…\n$ publication_year  <dbl> 2023, 2022, 2016, 2009, 2009, 2020, 2016, 2012, 2011…\n$ abbreviation      <chr> \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBT…\n```\n:::\n:::\n\n\n## Exploring ngrams in title+abstracts\n\n### Create a \"text\" column that is title and abstract combined\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data$text <- paste(raw_data$article_title, raw_data$abstract, sep = \" . \")\n\nhead(raw_data$text, n = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Genre and Metagenre in Biomedical Research Writing . The use of reporting guidelines is an established yet still-evolving practice in the field of biomedicine. These documents are often linked to common methodologies (e.g., randomized clinical trials); they include multiple textual artifacts (e.g., checklists, flow diagrams) and have a history that is coextensive with the emergence and ongoing development of evidence-based medicine (e.g., as an epistemological orientation to research and decision making). Drawing on the concept of metagenre, this article examines how practitioners use reporting guidelines to define and regulate the boundaries of biomedical research and writing activity. The analysis, focusing on one prominent set of guidelines, shows how practitioners use the genre-metagenre dynamic to promote strategic intervention while upholding traditional principles and standards for evidence-based research and communication.\"\n[2] \"The Ethics of Delivering Bad News: Evaluating Impression Management Strategies in Corporate Financial Reporting . Business communication textbooks offer impression management (IM) strategies to help students learn how to soften bad news. But corporations sometimes use these strategies in ethically questionable ways. This article analyzes IM strategies in a landmark case of ethically dubious corporate financial reporting. Findings suggest that the company, Ivax, manipulated three standard IM strategies by overamplifying its power to fix a financial crisis, substantially downplaying bad news, and concealing damaging information. Ivax also used a fourth, less familiar strategy: It buried contradictory information in legal disclaimers. Instructors need to help students become ethical writers who avoid questionable IM strategies like these.\"                                                                                                 \n```\n:::\n:::\n\n\n### Break \"text\" into a list of bigrams\n\nWe use unnest_tokens from tidytext to break our \"text\" column into individual observations of bigrams.\n\nNote that the \"text\" column will be replaced by a \"bigram\" column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntc_bigrams <- raw_data %>%\n  unnest_tokens(bigram, text, token = \"ngrams\", n = 2) %>%\n  filter(!is.na(bigram))\n```\n:::\n\nNotice that we've transformed our 2002 articles into 227,304 bigrams. \n\nWe can then count the most common bigrams in the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntc_bigrams %>%\n  count(bigram, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 105,848 × 2\n   bigram                      n\n   <chr>                   <int>\n 1 of the                   1232\n 2 technical communication  1197\n 3 in the                    960\n 4 this article              883\n 5 of technical              570\n 6 and the                   512\n 7 as a                      435\n 8 technical writing         427\n 9 to the                    424\n10 on the                    395\n# ℹ 105,838 more rows\n```\n:::\n:::\n\n### filter stopwords\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\n\n# transform \"bigram\" column into two columns: \"word1\" and \"word2\"\nbigrams_separated <- tc_bigrams %>%\n  separate(bigram, c(\"word1\", \"word2\"), sep = \" \")\n\n# filter to keep only rows where both word1 and word2 are not stopwords\nbigrams_filtered <- bigrams_separated %>%\n  filter(!word1 %in% stop_words$word) %>%\n  filter(!word2 %in% stop_words$word)\n\n\n# new bigram counts\nbigram_counts <- bigrams_filtered %>%\n  count(word1, word2, sort = TRUE)\n\nbigram_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 39,418 × 3\n   word1        word2             n\n   <chr>        <chr>         <int>\n 1 technical    communication  1197\n 2 technical    writing         427\n 3 technical    communicators   380\n 4 author       copyright       248\n 5 professional communication   241\n 6 writing      communication   237\n 7 sage         publications    212\n 8 multiple     sites           182\n 9 copyright    holder's        155\n10 holder's     express         146\n# ℹ 39,408 more rows\n```\n:::\n:::\n\n### Custom stopwords\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustom_stopwords <- c(\"copyright\",\n                      \"sage\",\n                      \"holder's\",\n                      \"express\",\n                      \"permission\",\n                      \"download\")\n\n# add custom stopwords to filter process\nbigrams_filtered <- bigrams_separated %>%\n  filter(!word1 %in% stop_words$word) %>%\n  filter(!word2 %in% stop_words$word)%>%\n  filter(!word1 %in% custom_stopwords) %>%\n  filter(!word2 %in% custom_stopwords)\n\n# new bigram counts\nbigram_counts <- bigrams_filtered %>%\n  count(word1, word2, sort = TRUE)\n\n\nbigram_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 39,374 × 3\n   word1        word2             n\n   <chr>        <chr>         <int>\n 1 technical    communication  1197\n 2 technical    writing         427\n 3 technical    communicators   380\n 4 professional communication   241\n 5 writing      communication   237\n 6 multiple     sites           182\n 7 social       media           135\n 8 user         experience      102\n 9 social       justice          94\n10 email        articles         92\n# ℹ 39,364 more rows\n```\n:::\n:::\n\n\n\nNow we can reunite our two columns into a single bigram column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbigrams_united <- bigrams_filtered %>%\n  unite(bigram, word1, word2, sep = \" \")\n\nbigrams_united\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58,563 × 7\n   source_title        author_full_names article_title abstract publication_year\n   <chr>               <chr>             <chr>         <chr>               <dbl>\n 1 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 2 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 3 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 4 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 5 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 6 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 7 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 8 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n 9 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n10 JOURNAL OF BUSINES… Wickman, Chad     Genre and Me… The use…             2023\n# ℹ 58,553 more rows\n# ℹ 2 more variables: abbreviation <chr>, bigram <chr>\n```\n:::\n:::\n\n\n### Trigrams (all at once)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntc_trigrams <- raw_data %>%\n  unnest_tokens(trigram, text, token = \"ngrams\", n = 3) %>%\n  filter(!is.na(trigram)) %>%\n  separate(trigram, c(\"word1\", \"word2\", \"word3\"), sep = \" \") %>%\n  filter(!word1 %in% stop_words$word,\n         !word2 %in% stop_words$word,\n         !word3 %in% stop_words$word,\n         !word1 %in% custom_stopwords,\n         !word2 %in% custom_stopwords,\n         !word3 %in% custom_stopwords) %>%\n  unite(trigram, word1, word2, word3, sep = \" \")\n\n\ntc_trigrams %>%\n  count(trigram, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 22,185 × 2\n   trigram                               n\n   <chr>                             <int>\n 1 technical writing communication     235\n 2 professional communication tpc       72\n 3 user centered design                 37\n 4 original published version           31\n 5 tactical technical communication     31\n 6 technical communication classroom    30\n 7 technical communication research     29\n 8 technical communication programs     24\n 9 covid 19 pandemic                    22\n10 user experience design               20\n# ℹ 22,175 more rows\n```\n:::\n:::\n\n\n## Tracking Counts over time\n\n### Filtering bigrams of interest\n\nWe can use `filter()` to retain ngrams of interest, which we can then visualize...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# define bigram of interest\nsj <-  \"social justice\"\n\n\n# filter for presence of bigram\nsj_bigrams <- bigrams_united %>%\n  filter(bigram == sj)\n\n# check result\nglimpse(sj_bigrams)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 94\nColumns: 7\n$ source_title      <chr> \"JOURNAL OF BUSINESS AND TECHNICAL COMMUNICATION\", \"…\n$ author_full_names <chr> \"Frost, Erin A.\", \"Petersen, Emily January; Walton, …\n$ article_title     <chr> \"Apparent Feminism as a Methodology for Technical Co…\n$ abstract          <chr> \"This article introduces apparent feminism, which is…\n$ publication_year  <dbl> 2016, 2018, 2018, 2018, 2018, 2018, 2022, 2022, 2022…\n$ abbreviation      <chr> \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBTC\", \"JBT…\n$ bigram            <chr> \"social justice\", \"social justice\", \"social justice\"…\n```\n:::\n\n```{.r .cell-code}\n# Calculate the frequency of the bigram by year\nsj_bigram_freq <- sj_bigrams %>%\n  group_by(publication_year) %>%\n  summarize(frequency = n()) %>%\n  ungroup()\n\n# Plot the frequency of the bigram by year\nggplot(sj_bigram_freq, aes(x = publication_year, y = frequency)) +\n  geom_line() +\n  ggtitle(\"Frequency of 'social justice' Bigram by Year\") +\n  xlab(\"Publication Year\") +\n  ylab(\"Frequency\") +\n  scale_x_continuous(breaks = seq(min(sj_bigram_freq$publication_year), max(sj_bigram_freq$publication_year), by = 1))\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nWe can also add other dimensions to the analysis, e.g. frequency by year and journal\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the frequency of the bigram by year and journal\nsj_bigram_freq <- sj_bigrams %>%\n  group_by(publication_year, abbreviation) %>%\n  summarize(frequency = n()) %>%\n  ungroup()\n\n# Plot the frequency of the \"social justice\" bigram by year and journal\nggplot(sj_bigram_freq, aes(x = publication_year, y = frequency)) +\n  geom_line() +\n  ggtitle(\"Frequency of 'social justice' Bigram by Year and Journal\") +\n  xlab(\"Publication Year\") +\n  ylab(\"Frequency\") +\n  facet_wrap(~abbreviation, scales = \"free_x\", ncol = 2)\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nAnd we can make that look a little nicer. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"ggthemes\")\nlibrary(ggthemes)\n\n# Calculate the frequency of the bigram by year and journal\nsj_bigram_freq <- sj_bigrams %>%\n  group_by(publication_year, abbreviation) %>%\n  summarize(frequency = n()) %>%\n  ungroup()\n\n# Plot the frequency of the \"social justice\" bigram by year and journal\nggplot(sj_bigram_freq, aes(x = publication_year, y = frequency, color = abbreviation)) +\n  geom_line() +\n  ggtitle(\"Frequency of 'social justice' by Year and Journal\") +\n  xlab(\"Publication Year\") +\n  ylab(\"Frequency\") +\n  scale_x_continuous(breaks = seq(min(sj_bigram_freq$publication_year), max(sj_bigram_freq$publication_year), by = 1)) +\n  scale_y_continuous(breaks = seq(0, max(sj_bigram_freq$frequency), by = 2)) +\n  theme_fivethirtyeight()\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n### From target bigram to more complex constructs\n\nWe can also create a list of bigrams as a proxy for a construct. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List of bigrams you want to analyze\nconstruct_list <- c(\"bigram1\", \"bigram2\", \"bigram3\")  # Add your list of bigrams here\n\n# Filter for the specific bigrams in the list\nfiltered_data <- bigrams_united %>%\n  filter(bigram %in% construct_list)\n\n# calculate frequency\n\n# plot\n```\n:::\n\n\nAlternatively, if you wanted to track complex constructions a la Majdik you might use the [stringr package to develop some regular expressions](https://stringr.tidyverse.org/articles/regular-expressions.html).\n\n\n## Some other exploratory analyses\n\n\n### TF-IDF\n\nWe can use term frequency inverse document frequency (TF-IDF). Similar to \"keyness\" in Quanteda, tf-idf can help us identify ngrams that are distinctive of a particular subset of the corpus. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbigram_tf_idf <- bigrams_united %>%\n  count(abbreviation, bigram) %>%\n  bind_tf_idf(bigram, abbreviation, n) %>%\n  arrange(desc(tf_idf))\n\nbigram_tf_idf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 43,753 × 6\n   abbreviation bigram                      n      tf   idf  tf_idf\n   <chr>        <chr>                   <int>   <dbl> <dbl>   <dbl>\n 1 JTWC         multiple sites            182 0.0135  1.61  0.0217 \n 2 JTWC         writing communication     235 0.0174  0.916 0.0160 \n 3 JTWC         email articles             92 0.00683 1.61  0.0110 \n 4 JTWC         copy users                 46 0.00342 1.61  0.00550\n 5 JTWC         original published         36 0.00267 1.61  0.00430\n 6 JTWC         editor's desk              31 0.00230 1.61  0.00370\n 7 JTWC         published version          31 0.00230 1.61  0.00370\n 8 CDQ          communication design       60 0.00624 0.511 0.00319\n 9 CDQ          communication designers    19 0.00197 1.61  0.00318\n10 CDQ          university press           12 0.00125 1.61  0.00201\n# ℹ 43,743 more rows\n```\n:::\n:::\n\n### Bigram tf-idf, by journal \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nbigram_tf_idf %>%\n  arrange(desc(tf_idf)) %>%\n  group_by(abbreviation) %>%\n  slice_max(tf_idf, n = 10) %>%\n  ungroup() %>%\n  mutate(bigram = reorder(bigram, tf_idf)) %>%\n  ggplot(aes(tf_idf, bigram, fill = abbreviation)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ abbreviation, ncol = 2, scales = \"free\") +\n  labs(x = \"tf-idf of bigram\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n### Bigram tf-idf, by year\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get tf-idf by year\nbigram_tf_idf_year <- bigrams_united %>%\n  count(publication_year, bigram) %>%\n  bind_tf_idf(bigram, publication_year, n) %>%\n  arrange(desc(tf_idf))\n\n# plot tf-idf by year\nbigram_tf_idf_year %>%\n  arrange(desc(tf_idf)) %>%\n  group_by(publication_year) %>%\n  slice_max(tf_idf, n = 5) %>%\n  ungroup() %>%\n  mutate(bigram = reorder(bigram, tf_idf)) %>%\n  ggplot(aes(tf_idf, bigram, fill = publication_year)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ publication_year, ncol = 3, scales = \"free\") +\n  labs(x = \"tf-idf of bigram\", y = NULL)\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n\nbigram_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 39,374 × 3\n   word1        word2             n\n   <chr>        <chr>         <int>\n 1 technical    communication  1197\n 2 technical    writing         427\n 3 technical    communicators   380\n 4 professional communication   241\n 5 writing      communication   237\n 6 multiple     sites           182\n 7 social       media           135\n 8 user         experience      102\n 9 social       justice          94\n10 email        articles         92\n# ℹ 39,364 more rows\n```\n:::\n\n```{.r .cell-code}\nbigram_graph <- bigram_counts %>%\n  filter(n > 25) %>%\n  graph_from_data_frame()\n\nbigram_graph\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIGRAPH 4d6f8b4 DN-- 81 69 -- \n+ attr: name (v/c), n (e/n)\n+ edges from 4d6f8b4 (vertex names):\n [1] technical    ->communication technical    ->writing      \n [3] technical    ->communicators professional ->communication\n [5] writing      ->communication multiple     ->sites        \n [7] social       ->media         user         ->experience   \n [9] social       ->justice       email        ->articles     \n[11] article      ->examines      content      ->strategy     \n[13] web          ->sites         covid        ->19           \n[15] communication->tpc           communication->design       \n+ ... omitted several edges\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"ggraph\")\nlibrary(ggraph)\nset.seed(999)\n\nggraph(bigram_graph, layout = \"fr\") +\n  geom_edge_link() +\n  geom_node_point() +\n  geom_node_text(aes(label = name), vjust = 1, hjust = 1)\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\na <- grid::arrow(type = \"closed\", length = unit(.1, \"inches\"))\n\nggraph(bigram_graph, layout = \"fr\") +\n  geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,\n                 arrow = a, end_cap = circle(.05, 'inches')) +\n  geom_node_point(color = \"lightblue\", size = 3) +\n  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](wk06_tracking-frames_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "wk06_tracking-frames_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}